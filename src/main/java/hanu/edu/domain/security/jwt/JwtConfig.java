package hanu.edu.domain.security.jwt;

import lombok.Getter;
import org.springframework.beans.factory.annotation.Value;

@Getter
// Configuration class for JWT tokens.
public class JwtConfig {
    // URL to which the token will be sent when it is generated by this class.
    @Value("${jwt.url:/login}")
    private String url;

    // The authorization string that will be included in every request made with
    // this token (e.g., Authorization Bearer).
    @Value("Authorization")
    private String header;

    // Token authentication
    // Name of the field in which the token will be stored on its issuer's server
    @Value("${jwt.prefix:Bearer}")
    private String prefix;

    // How long after issuance until a new token must be issued to replace an old one (in seconds).
    // How long before a refresh should occur
    // 1 hour
    @Value("${jwt.expiration:#{60*60}}")
    private int expiration;

    // https://www.allkeysgenerator.com/Random/Security-Encryption-Key-Generator.aspx
    @Value("${jwt.secret:7A24432646294A404E635266556A586E327234753778214125442A472D4B6150}")
    private String secret;
}
